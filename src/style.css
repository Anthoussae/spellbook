/*light theme*/
:root {
  --baseBackgroundColor: #f7ebe0;
  --containerBackgroundColor: rgba(248, 215, 185, 0.4);
  --relicStyling: brightness(1.4) contrast(0.7) saturate(0.7);
}

/* Disable text selection */
* {
  user-select: none;
  cursor: default;
}

img,
button,
a {
  user-select: auto;
  cursor: pointer; /* Ensures the pointer changes to a hand on clickable elements */
}

html,
body {
  overflow: hidden; /* Prevent scrollbars from appearing */
  margin: 0; /* Ensure no unexpected margins */
  padding: 0; /* Ensure no unexpected padding */
  height: 100%; /* Ensure the body takes up the full height */
}

.screen {
  display: flex; /* Enable flexbox */
  flex-direction: column; /* Arrange children (buttons, etc.) in a column */
  align-items: center; /* Center items horizontally */
  justify-content: center; /* Center items vertically */
  height: 100vh; /* Ensure the container takes up the full height of the viewport */
  text-align: center; /* Center text inside the container */
}

.level,
.hud,
.banner,
.belt,
.output {
  position: absolute;
  background-color: rgba(255, 255, 255, 0); /* Semi-transparent background */
  box-sizing: border-box;
  font-size: 1.2vw;
  color: #333; /* Dark text color */
}
.hud {
  border-radius: 25px;
  padding: 4px; /* Adds some padding around the images */
  background-color: var(--containerBackgroundColor);
  width: 9vw; /* Slightly smaller width */
  height: 10vh; /* Slightly smaller height */
  top: 4vh; /* Move closer to the center vertically */
  left: 4vw; /* Move closer to the center horizontally */
}

.level {
  /*should always be slightly larger than contents*/
  border-radius: 25px;
  padding: 4px; /* Adds some padding around the images */
  background-color: var(--containerBackgroundColor);
  width: 8vw; /* Slightly smaller width */
  height: 3.5vh; /* Slightly smaller height */
  top: 4vh; /* Move closer to the center vertically */
  right: 4vw; /* Move closer to the center horizontally */
}

.banner {
  background-color: var(--containerBackgroundColor);
  width: 40vw; /* Slightly smaller width */
  height: 6vh; /* Slightly smaller height */
  top: 4vh; /* Move closer to the center vertically */
  left: calc(47vw - 16.5vw); /* Centered horizontally, adjusted for new width */
  font-size: 2.8vw;
  border-radius: 25px;
}

#deckBannerElement {
  /* text should be dark green, banner should be slightly greener*/
  color: #333; /* Dark text color */
  background-color: rgba(0, 128, 0, 0.4); /* Slightly transparent green */
}

#bagBannerElement {
  /* text should be dark blue, banner should be slightly bluer*/
  color: #160042; /* Dark text color */
  background-color: rgba(0, 0, 128, 0.4); /* Slightly transparent blue */
}

#combatBannerElement {
  /* text should be dark red, banner should be slightly redder*/
  /* text should be dark red, banner should be slightly redder*/
  color: #800000; /* Dark text color */
  background-color: rgba(255, 0, 0, 0.4); /* Slightly transparent red */
  height: 10vh;
  font-size: 3.6vw;
  justify-content: center;
  padding-top: 0.4vw;
}

/* deck icon */
.deckContainer {
  position: fixed;
  left: 0.1in;
  bottom: 0.1in;
  display: inline-block;
  cursor: pointer;
  width: 25vh; /* Adjust width as needed */
  /*rounded edges*/
  border-radius: 200px;
}
.deckImage {
  width: 80%; /* Adjust width as needed */
  max-width: 400px;
  height: auto;
  transition: opacity 0.3s ease, filter 0.3s ease;
}
.deckText {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 25px; /* Adjust font size as needed */
  display: none;
  text-align: center;
}
.deckContainer:hover .deckImage {
  filter: brightness(50%); /* Darkens the image significantly */
}
.deckContainer:hover .deckText {
  display: block; /* Shows the text on hover */
}
/*deckInspect*/
#deckExamine {
  display: none; /* Hide by default */
}

/*bag inspect*/
#bagExamine {
  display: none; /* Hide by default */
  position: absolute; /* Remove from normal document flow */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0); /* Example styling for an overlay */
  z-index: 10; /* Ensure it appears above other content when displayed */
}
/* bag icon */
.bagContainer {
  position: fixed;
  right: 0.2in;
  bottom: 0.2in;
  display: inline-block;
  cursor: pointer;
  /*rounded edges*/
  border-radius: 250px;
}
.bagImage {
  width: 70%; /* Adjust width as needed */
  max-width: 400px;
  height: auto;
  transition: opacity 0.3s ease, filter 0.3s ease;
}
.bagText {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 25px; /* Adjust font size as needed */
  display: none;
  text-align: center;
}
.bagContainer:hover .bagImage {
  filter: brightness(50%); /* Darkens the image significantly */
}
.bagContainer:hover .bagText {
  display: block; /* Shows the text on hover */
}

/* Image styling. */

.tooltip img {
  filter: var(--relicStyling);
  max-width: 100%; /* Ensures the image scales down to fit the container width */
  height: auto; /* Maintains the aspect ratio of the image */
  margin: 4.2vw; /* Adds some space around each image */
  object-fit: contain; /* Ensures the image is contained within its box */
  flex: 1 1 auto; /* Allows images to grow and shrink as needed */
  transition: transform 0.3s ease; /* Smooth transition for scaling effect */
}

/* Scale image on hover */
.tooltip:hover img {
  transform: scale(1.2); /* Scale image to 110% of its original size */
}

/* Tooltip text */
.tooltip .tooltiptext {
  visibility: hidden;
  width: auto; /* Automatically adjust width based on content */
  min-width: 200px; /* Set a minimum width to prevent excessive shrinking */
  max-width: 200px; /* Set a maximum width to prevent excessive expansion */
  background-color: #333; /* Dark background for the tooltip */
  color: #fff; /* White text color */
  text-align: center;
  border-radius: 5px; /* Rounded corners */
  padding: 4px 10px; /* Padding around text */
  position: absolute;
  z-index: 99999; /* High z-index to ensure it appears above other elements */
  bottom: 85%; /* Position tooltip above the image */
  left: 50%; /* Center the tooltip horizontally */
  transform: translateX(-50%); /* Center the tooltip horizontally */
  opacity: 0; /* Hidden by default */
  transition: opacity 0.3s; /* Smooth fade-in effect */
  box-sizing: border-box; /* Include padding and border in the element's total width and height */
  line-height: 1.5; /* Adjust line height for better readability */
  font-size: 16px;
}

/* Show the tooltip text when hovering over the tooltip container */
.tooltip:hover .tooltiptext {
  visibility: visible;
  position: absolute;
  z-index: 99999;
  opacity: 1;
}

/*mythic, deck, and bag display zone*/
#mythicSelectionOutput,
#deckExamineOutput,
#bagExamineOutput {
  border-radius: 25px;
  background-color: transparent;
  position: absolute;
  display: flex;
  align-items: center; /* Centers the images vertically */
  transform: scale(1.2); /* Scales the images slightly */
  padding: 10px;
  margin-left: 20px;
  margin-top: -45px;
  object-fit: contain;
}

/* Carpet Background Styling */
.red-carpet-background {
  position: fixed;
  top: 50%;
  left: 50%;
  width: 75vw;
  height: 80vh;
  background-image: url("data/imgs/displayElements/mythicCarpet.png");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  transform: translate(-50%, -50%);
  z-index: 0;
  display: none; /* Hidden by default */
  pointer-events: none; /* Ensures it doesn't interact with other elements */
}

.green-carpet-background {
  position: fixed;
  top: 50%;
  left: 50%;
  width: 140vw;
  height: 140vh;
  background-image: url("data/imgs/displayElements/greenCarpet.png");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  transform: translate(-50%, -50%);
  z-index: -10;
  display: none; /* Hidden by default */
  pointer-events: none; /* Ensures it doesn't interact with other elements */
}

.blue-carpet-background {
  position: fixed;
  top: 50%;
  left: 50%;
  width: 140vw;
  height: 100vh;
  background-image: url("data/imgs/displayElements/blueCarpet.png");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  transform: translate(-50%, -50%);
  z-index: -10;
  display: none; /* Hidden by default */
  pointer-events: none; /* Ensures it doesn't interact with other elements */
}

/* Global stylings for consistency */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: luminari, fantasy; /* Ensure global font application */
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-color: #f0f0f0; /* Light background for contrast */
}

button {
  font-family: luminari, fantasy;
  /* filter: brightness(1.3) contrast(0.7) saturate(0.5); */
}

#gameContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column; /* Stack items vertically */
  text-align: center;
  background-color: #f7ebe0;
  position: relative; /* Add this to make the container a positioning context */
  width: 100vw; /* 80% of the viewport width */
  height: 100vh; /* 60% of the viewport height */
  margin: 0 auto;
  background-color: #f7ebe0;
}

/* fullscreen icon */
#fullscreenBtn {
  position: absolute; /* Position the button absolutely within the container */
  bottom: 10px; /* 10px from the bottom */
  right: 10px; /* 10px from the right */
  padding: 0px;
  background-color: #f7ebe0;
  color: #000000;
  border: none;
  cursor: pointer;
  font-size: 24px; /* Size of the icon */
  border-radius: 50%; /* This makes the button fully rounded */
  width: 32px; /* Set width to create a circular button */
  height: 32px; /* Set height to match width for a perfect circle */
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
}
#fullscreenBtn:hover {
  background-color: #ffd7a0;
}

/*small buttons*/

.smallBtn {
  background-color: #7238c3; /* Cute color for the button */
  color: white;
  border: none;
  width: 10vw; /* Button width scales with the viewport width */
  height: 9vh; /* Button height scales with the viewport height */
  font-size: calc(0.3 * 10vh); /* Font size scales with the viewport width */
  border-radius: 1vw; /* Rounded corners also scale */
  border-radius: 15px; /* Slightly larger rounded corners */
  padding: 0.5vh; /* Increase padding for larger button */
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.2s ease; /* Smooth transitions for hover effects */
  /*add space between buttons*/
  margin-bottom: 20px;
  margin-left: 20px;
  margin-right: 20px;
}

.smallBtn:hover {
  background-color: #ff9f87; /* Slightly lighter color on hover  */
}

#smallBtn:active {
  transform: scale(0.95); /* Button shrink effect on click */
}

#deck-resume-button,
#bag-resume-button {
  margin-top: 85vh;
}

/*menu buttons*/
.menuBtn {
  display: block;
  background-color: #7238c3; /* Cute color for the button */
  color: white;
  border: none;
  width: 20vw; /* Button width scales with the viewport width */
  height: 12vh; /* Button height scales with the viewport height */
  font-size: calc(0.5 * 10vh); /* Font size scales with the viewport width */
  border-radius: 1vw; /* Rounded corners also scale */
  border-radius: 15px; /* Slightly larger rounded corners */
  padding: 3vh; /* Increase padding for larger button */
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.2s ease; /* Smooth transitions for hover effects */
  /*add space between buttons*/
  margin-bottom: 20px;
  margin-left: 20px;
  margin-right: 20px;
}

.menuBtn:hover {
  background-color: #ff9f87; /* Slightly lighter color on hover  */
}

#menuBtn:active {
  transform: scale(0.95); /* Button shrink effect on click */
}

/*start screen stylings*/
.titleBanner {
  font-size: 6vw; /* Increase font size for larger banner */
  margin-bottom: 30px; /* Increase space between logo and button */
  color: #120336; /* Dark text color for contrast */
}

/*difficulty selection stylings*/
#easy {
  background-color: #a8e6cf; /* Light green */
  color: #333; /* Dark text */
  border: 2px solid #87d6b2; /* Slightly darker green for the border */
}

#normal {
  background-color: #ffd3b6; /* Light orange */
  color: #333; /* Dark text */
  border: 2px solid #ffb085; /* Slightly darker orange for the border */
}

#hard {
  background-color: #ffaaa5; /* Light red */
  color: #333; /* Dark text */
  border: 2px solid #ff8474; /* Slightly darker red for the border */
}

.menuBtn:hover {
  transform: scale(1.1); /* Enlarge slightly on hover */
}

#easy:hover {
  background-color: #bdebd5; /* Slightly lighter green on hover */
}

#normal:hover {
  background-color: #ffe4cc; /* Slightly lighter orange on hover */
}

#hard:hover {
  background-color: #ffc1be; /* Slightly lighter red on hover */
}

#easy:active,
#normal:active,
#hard:active {
  transform: scale(1.05); /* Reduce scale slightly when clicked */
}

.menuBtn:disabled {
  background-color: #cccccc; /* Grey background for disabled button */
  color: #666666; /* Grey text for disabled button */
  border: 1px solid #cccccc;
  cursor: not-allowed; /* Change cursor to indicate the button is not clickable */
  transform: none; /* Ensure no scale transform is applied */
}

.smallBtn:disabled {
  background-color: #cccccc; /* Grey background for disabled button */
  color: #666666; /* Grey text for disabled button */
  border: 1px solid #cccccc;
  cursor: not-allowed; /* Change cursor to indicate the button is not clickable */
  transform: none; /* Ensure no scale transform is applied */
}

/*animations*/
/*bunny transition */
.bunny-transition {
  position: fixed;
  top: 50%;
  left: 50%;
  width: 100px;
  height: 100px;
  background-color: black;
  border-radius: 50%;
  z-index: 1000;
  transform: translate(-50%, -50%);
  animation: expand 0.5s forwards ease-in-out;
}

.bunny-transition::before,
.bunny-transition::after {
  content: "";
  position: absolute;
  width: 60px;
  height: 120px;
  background-color: black;
  border-radius: 50%;
  top: -60px;
}

.bunny-transition::before {
  left: -30px;
  transform: rotate(-45deg);
}

.bunny-transition::after {
  right: -30px;
  transform: rotate(45deg);
}

@keyframes expand {
  from {
    transform: translate(-50%, -50%) scale(0);
  }
  to {
    transform: translate(-50%, -50%) scale(25);
  }
}

@keyframes contract {
  from {
    transform: translate(-50%, -50%) scale(25);
  }
  to {
    transform: translate(-50%, -50%) scale(0);
  }
}
/* 
/* Poof Effect */
/* Initial state for relics */
.relic-image {
  transform: scale(0.9);
  opacity: 1;
  transition: transform 3s ease, opacity 3s ease; /* Increase transition duration for debugging */
}

.relic-image.pickup {
  /* make it grayscale*/
  filter: grayscale(100%);
}

/* Poof Effect when relic fades out */
.relic-fade {
  transform: scale(1.2); /* Increase size by 75% */
  opacity: 0; /* Fade out */
  transition: transform 1.5s ease, opacity 1.5s ease; /* Increase transition duration for debugging */
}

/* cards */
#deckExamineOutput {
  max-height: 700px; /* Set this to whatever height you need */
  overflow-y: auto;
  overflow: visible;
  display: flex;
  flex-wrap: wrap;
  margin-left: 120px;
  /* align-items: flex-start; 
  justify-content: space-between;  */
  gap: 1%; /* Space between cards */
  font-size: 1.5vw;
  transform: scale(0.9); /* 0.9 is 90%, so 10% smaller */
  transform-origin: center; /* Ensure scaling is done from the top left */
}

#deckExamineOutput::-webkit-scrollbar {
  width: 8px;
}

#deckExamineOutput::-webkit-scrollbar-thumb {
  background-color: rgba(0, 200, 150, 0.8); /* Teal color */
  border-radius: 10px;
}

#deckExamineOutput::-webkit-scrollbar-track {
  background-color: rgba(255, 255, 255, 0.1); /* Light track */
  border-radius: 10px;
}

.card {
  width: 1300%; /*not culprit of deck jump */
}

.card:hover {
  transform: scale(1.5); /* Increase size by 50% */
  z-index: 8888;
  /*ease the transform*/
  transition: transform 0.3s ease;
}

.card:hover .tooltip {
  visibility: visible;
}

/* relic examine - items aren't properly centered.*/

#bagExamineOutput {
  /* background-color: var(--containerBackgroundColor); */
  max-height: 590px; /* Set this to whatever height you need */
  max-width: 1400px;
  min-height: 700px;
  min-width: 1400px;
  overflow-y: auto;
  /* overflow: visible; */
  display: flex;
  flex-wrap: wrap;
  margin-left: 0px;
  /* margin-bottom: 150px; */
  align-items: flex-start;
  justify-content: space-between;
  gap: 0%; /* Space between cards */
  font-size: 1.5vw;
  transform: scale(0.9); /* 0.9 is 90%, so 10% smaller */
  transform-origin: center;
  justify-content: center;
}

.tooltip.relic-container.bag {
  margin-right: 30px;
  margin-top: 100px;
  justify-content: center;
  transform-origin: center;

  /* justify-content: center; */
  /* justify-items: center; */
  max-width: 180px;
  max-height: 180px;
  /* background-color: black; */
  /* padding: 5px; */
}

.tooltiptext.bag {
  bottom: 80%;
  left: 20%;
  transform: translate(10%, 20%);
}

#bagExamineOutput::-webkit-scrollbar {
  width: 8px;
}

#bagExamineOutput::-webkit-scrollbar-thumb {
  background-color: rgba(117, 123, 253, 0.8); /* Teal color */
  border-radius: 10px;
}

#bagExamineOutput::-webkit-scrollbar-track {
  background-color: rgba(255, 255, 255, 0.1); /* Light track */
  border-radius: 10px;
}

/*path displays */
#pathSelectionOutput {
  display: flex;
  justify-content: space-around; /* Ensures images are evenly spaced */
  overflow: visible; /* Allow images to grow beyond container */
  align-items: flex-start; /* Align items to the top of the container */
}
.path-option {
  /* add a sepia  */
  filter: sepia(0.4);
  margin: 0 2px;
  text-align: center;
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.5s ease;
  position: relative; /* Ensure text stays in position */
}

.image-wrapper {
  position: relative;
  width: 100%;
  height: auto;
}

.image-wrapper:hover {
  color: #720363;
}

.path-option:not(#locked):hover {
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.5s ease;
  transform: scale(1.1); /* Increase size by 10% */
  z-index: 1; /* Ensure the hovered image is above others */
}

.path-optionlocked:hover {
  filter: brightness(1.3); /* Darken the image when locked */
}

#locked {
  filter: grayscale(100%);
}

.path-image {
  width: 80%;
  height: auto;
  transition: opacity 0.3s ease;
}

.path-image.rest:hover {
  transition: opacity 0.3s ease;
  filter: hue-rotate(160deg) contrast(1) saturate(50);
}
.path-image.combat:hover {
  transition: opacity 0.3s ease;
  filter: hue-rotate(0deg) contrast(1) saturate(50);
}
.path-image.shop:hover {
  transition: opacity 0.3s ease;
  filter: hue-rotate(40deg) contrast(1) saturate(50);
}

.path-name {
  margin-top: 5px; /* Add space between the image and text */
}

.path-image.fade {
  opacity: 1;
}

.locked-overlay {
  position: absolute;
  top: 0;
  z-index: 1;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(1, 0, 0, -0.5); /* Semi-transparent black overlay */
  display: flex; /* Enable flexbox */
  align-items: center; /* Center items horizontally */
  justify-content: center; /* Center items vertically */
  border-radius: 25px; /* Rounded corners */
}

/*combat*/

.hand {
  background-color: var(--containerBackgroundColor);
  display: block;
  width: 62vw;
  height: 18vh;
  position: absolute;
  margin-right: -10vw;
  margin-bottom: -70vh;
  border-radius: 25px;
  /*allow contents to spill out*/
  overflow: visible;
  overflow-y: visible;
}

.enemyHud {
  color: #800000; /* Dark text color */
  background-color: rgba(255, 0, 0, 0.4); /* Slightly transparent red */
  display: flex;
  flex-direction: column;
  justify-content: left;
  font-size: 1.8vw;
  align-items: center;
  position: absolute;
  width: 10vw;
  height: 10vh;
  top: 4vh; /* Move closer to the center vertically */
  padding: 4px;
  margin-left: 72vw;
  border-radius: 25px;
}

.enemyHp {
  display: block;
}

.enemyAttack {
  display: block;
}

/*buffs - display still a bit bugged, quivering and resizing weirdly*/

.buff-display {
  display: flex;
  flex-direction: row; /* Arrange in row */
  justify-content: space-evenly; /* Evenly distribute buffs */
  align-items: center; /* Vertically align buffs */
  height: 10vh;
  width: 20vw;
  border-radius: 25px;
  position: absolute;
  margin-top: 20vw;
}

.tooltiptext.buff-text {
  pointer-events: none;
}

.buff-display.player {
  left: 4vw;
}

.buff-display.enemy {
  right: 4vw;
}

.buff {
  width: 50px; /* Set a fixed width for the buffs */
  height: 50px; /* Set a fixed height for the buffs */
  object-fit: cover; /* Ensure the image fits well */
  margin: 0 5px; /* Add some spacing between buffs */
  transform: scale(3); /* Shrink buff if needed */
}

.buff-image img {
  filter: none;
}

.buff-image img:hover {
  transform: scale(3.6);
}

.tooltiptext.buff-image {
  pointer-events: none; /* Disable all user interactions */
}

.tooltip.buff-image {
  margin: -15px;
}

.tooltip.buff-image:hover {
  margin: -15px;
  pointer-events: none;
}

.tooltip .buff .tooltiptext .buff-display .buff-image .buff-text :hover {
  pointer-events: none;
}

.buff-display * {
  pointer-events: none;
}

.buff-display *:hover {
  pointer-events: none;
}

#enemyBuffDisplay * {
  pointer-events: visiblePainted;
}
#enemyBuffDisplay *:hover {
  pointer-events: visiblePainted;
}

/*ink*/
.ink-drop {
  /* background-image: url("data/imgs/displayElements/inkdrop.png");
  background-color: #120336;
  border-radius: 225px;
  height: 10vh;
  width: 7vw;
  font-size: 1.8vw;
  color: rgb(189, 200, 255);
  justify-content: center;
  align-items: center;
  position: absolute;
  display: flex;
  top: 80vh; /* Move closer to the center vertically */
  /*left: 15vw; */

  width: 30vw; /* Set a fixed width */
  height: 15vw; /* Set a fixed height */
  top: 75vh;
  left: 12vw;
  background-image: url("data/imgs/displayElements/inkdrop.png");
  background-size: contain; /* Ensure the image scales correctly */
  background-repeat: no-repeat;
  position: absolute; /* Enable absolute positioning for the number */
  display: flex;
  justify-content: center;
  align-items: center;
}

.ink-number {
  margin-bottom: -1vw;
  margin-right: 15vw;
  font-size: 30px; /* Adjust font size */
  color: rgb(189, 200, 255);
  position: absolute; /* Make sure it stays on top of the image */
}

.ink-number:hover {
  color: white;
}

.char-display {
  /* background-color: var(--containerBackgroundColor); */
  display: flex;
  flex-direction: column;
  height: 30vw;
  width: 20vw;
  margin-top: -5vw;
  border-radius: 25px;
  position: absolute;
}

.char-display.player {
  left: 4vw;
}
.char-display.enemy {
  right: 4vw;
}

.output.combat {
  width: 50vw;
  margin-top: -5vw;
  height: 30vw;
  border-radius: 25px;

  background-color: var(--containerBackgroundColor);
}

.hud.combat {
  left: 10vw;
  color: #014b1c; /* Dark text color */
  background-color: var(--containerBackgroundColor);
  display: flex;
  flex-direction: column;
  justify-content: left;
  font-size: 1.8vw;
  align-items: center;
  position: absolute;
  width: 10vw;
  height: 10vh;
  padding: 4px;
  border-radius: 25px;
}

#combatShield {
  color: rgba(0, 0, 128, 0.4);
}

/*purge animation*/
/* CSS for the white puff effect */
@keyframes puffEffect {
  0% {
    opacity: 0;
    transform: scale(0.5);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
  }
  100% {
    opacity: 0;
    transform: scale(1.5);
  }
}

.puff {
  position: absolute;
  width: 50px; /* Adjust the size as needed */
  height: 50px;
  background: white;
  border-radius: 50%;
  opacity: 0;
  pointer-events: none; /* This prevents the puff from interfering with clicks */
  animation: puffEffect 0.5s ease-out forwards;
}
